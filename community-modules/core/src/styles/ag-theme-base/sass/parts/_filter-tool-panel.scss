@mixin ag-theme-base-part-filter-tool-panel {
    .ag-filter-panel {
        color: $ag-header-foreground-color;
        font-weight: $ag-secondary-font-weight;
        font-size: $ag-secondary-font-size;
        font-family: $ag-secondary-font-family;
    }

    .ag-filter-toolpanel-header {
        // TODO specificity
        &.ag-filter-header {
            min-height: $ag-header-height;
            height: $ag-header-height;
            border-bottom: 1px solid $ag-border-color;
            box-sizing: content-box;
        }

        // TODO do this without reaching into input wrapper
        .ag-input-wrapper {
            padding-left: $ag-grid-size;
            padding-right: $ag-grid-size;
            input {
                width: 100%;
            }
        }
    }

    .ag-filter-toolpanel-header-expand {
        margin: 0 $ag-grid-size / 2;
    }

    .ag-filter-list-panel {
        // TODO structural styles
        flex: 1 1 auto;
        overflow: auto;

        // TODO nesting
        .ag-first-group-visible {
            .ag-group-title-bar {
                border-top: none;
                min-height: calc(#{$ag-header-height} - 1px);
            }
        }
    }

    .ag-filter-panel {
        .ag-group {
            border: none;
            background-color: $ag-header-background-color;
            .ag-group-title-bar {
                min-height: $ag-header-height;
                .ag-group-title {
                    white-space: nowrap;
                }

                .ag-column-group-icons {
                    margin: 0 $ag-grid-size;
                }
            }

            &.ag-has-filter {
                > .ag-group-title-bar {
                    .ag-group-title:after {
                        content: $ag-icon-filter;
                        font-family: $ag-icon-font-family;
                        font-size: $ag-icon-size;
                        margin-left: $ag-grid-size;
                        color: $ag-icon-color;
                        font-weight: normal;
                    }
                }
            }
        }

        .ag-group-container {
            margin-left: 0;
            padding: 0;
            .ag-group-item {
                &:not(.ag-filter-toolpanel-instance) {
                    margin-top: 0;
                }
                .ag-group-title-bar {
                    background-color: $ag-group-background-color;
                }
                .ag-filter-toolpanel-header {
                    padding-top: $ag-grid-size / 2;
                    padding-bottom: $ag-grid-size / 2;
                }
                .ag-filter-toolpanel-body {
                    &:not(:empty) {
                        margin: $ag-grid-size 0;
                    }
                    .ag-filter-air {
                        border: 1px solid $ag-border-color;
                        padding-top: $ag-grid-size;
                        color: $ag-foreground-color;
                        font-weight: $ag-font-weight;
                        font-size: $ag-font-size;
                        font-family: $ag-font-family;
                    }
                }
            }
        }

        .ag-group-item {
            margin-top: $ag-grid-size;
            margin-bottom: $ag-grid-size;
        }

        .ag-group-item:not(.ag-filter-toolpanel-instance),
        .ag-group-item > .ag-group {
            border-top: none;
            margin-bottom: 0;
            .ag-group-title-bar {
                min-height: unset;
                height: unset;
                margin: $ag-grid-size 0;
            }
        }
    }

    @include ag-auto-rtl(
        ".ag-filter-toolpanel-header-expand",
        (
            padding-left: $ag-grid-size / 2
        )
    );

    @include ag-auto-rtl(
        ".ag-filter-panel .ag-group-item",
        (
            margin-right: $ag-grid-size / 2,
            margin-left: 0
        )
    );

    @for $i from 1 through 5 {
        @include ag-auto-rtl(
            ".ag-filter-panel-group-level-#{$i} .ag-group-title-bar",
            (
                // TODO use a variable instead of rem
                    padding-left: 1rem * ($i - 1)
            )
        );
        @include ag-auto-rtl(
            ".ag-filter-panel-group-level-#{$i} .ag-filter-toolpanel-header",
            (
                padding-left: 1rem * $i
            )
        );
    }
}
